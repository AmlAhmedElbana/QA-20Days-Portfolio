{
	"info": {
		"_postman_id": "26e49290-273f-410b-a3ab-a21ca79b7eed",
		"name": "Auth_Schema",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45296635",
		"_collection_link": "https://amlahmed-6282774.postman.co/workspace/20Days_QA_Bootcamp~9bf0b6fa-f675-4fc9-a3ab-0da50f350414/collection/45296635-26e49290-273f-410b-a3ab-a21ca79b7eed?action=share&source=collection_link&creator=45296635"
	},
	"item": [
		{
			"name": "signup",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"eve.holt@reqres.in\",\r\n  \"password\": \"cityslicka\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/signup",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Authorized request returns 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"// Note: /users/:id returns static users unrelated to login\r",
							"pm.test(\"Security header is present\", () => {\r",
							"  const headers = pm.response.headers;\r",
							"  pm.expect(headers.has('x-content-type-options')).to.be.true;\r",
							"});\r",
							"\r",
							"const template = `\r",
							"<table border=\"1\" style=\"border-collapse: collapse;\">\r",
							"  <tr>\r",
							"    <th>ID</th>\r",
							"    <th>Title</th>\r",
							"  </tr>\r",
							"  {{#each posts}}\r",
							"    <tr>\r",
							"      <td>{{this.id}}</td>\r",
							"      <td>{{this.title}}</td>\r",
							"    </tr>\r",
							"  {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"pm.visualizer.set(template, {\r",
							"  posts: pm.response.json()\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get('token')) {\r",
							"  pm.sendRequest({\r",
							"      url: pm.environment.get('baseUrl') + '/login',\r",
							"      method: 'POST',\r",
							"      header: { 'Content-Type': 'application/json', 'x-api-key': 'reqres-free-v1' },\r",
							"      body: {\r",
							"          mode: 'raw',\r",
							"          raw: JSON.stringify({\r",
							"              email: 'eve.holt@reqres.in',\r",
							"              password: 'cityslicka'\r",
							"          })\r",
							"      }\r",
							"  }, function (err, res) {\r",
							"      if (!err) {\r",
							"          pm.environment.set('token', res.json().token);\r",
							"      }\r",
							"  });\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 201 Created\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Title returned correctly\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.title).to.eql(pm.collectionVariables.get(\"title\"));\r",
							"});\r",
							"\r",
							"// Store the ID for use in next requests\r",
							"pm.collectionVariables.set(\"createdId\", pm.response.json().id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"userId\", Math.floor(Math.random() * 100));\r",
							"pm.collectionVariables.set(\"title\", \"QA - \" + Math.random().toString(36).substring(7));\r",
							"pm.collectionVariables.set(\"body\", \"Auto-generated body \" + Date.now());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{title}}\",\r\n  \"body\": \"{{body}}\",\r\n  \"userId\": \"{{userId}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returned post ID matches createdId\", () => {\r",
							"    pm.expect(pm.response.json().id).to.eql(Number(pm.collectionVariables.get(\"createdId\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned title matches\", () => {\r",
							"    pm.expect(pm.response.json().title).to.eql(pm.collectionVariables.get(\"title\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/100",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"100"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "title",
			"value": "{{$randomWords}}",
			"type": "string"
		},
		{
			"key": "body",
			"value": "{{$randomParagraph}}",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "{{$randomInt}}",
			"type": "string"
		},
		{
			"key": "createdId",
			"value": ""
		}
	]
}